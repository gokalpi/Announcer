function displayAddModal(){operationType="add";$("#add-edit-form")[0].reset();$("#modal-title").text("Yeni Ayar");$("#modal-save-button").html('<i class="las la-save"><\/i> Ekle');$("#modal-form").modal("show")}function displayEditModal(n){operationType="edit";$("#add-edit-form")[0].reset();$("#modal-title").text("Ayar Güncelleme");$("#modal-save-button").html('<i class="las la-save"><\/i> Güncelle');fetch(`${uri}/${n}`,{method:"GET",headers:jsonHeaders}).then(function(n){if(!n.ok)throw Error(`${n.status} status code received.`);return n.json()}).then(function(n){if(n.isSuccessful){let t=n.model;settingId.value=t.id;settingKey.value=t.key;settingValue.value=t.value;$("#modal-form").modal("show")}else swal("Ayar Okuma Hatası",n.message,"error")}).catch(n=>{console.error("Unable to get setting.",n),swal("Ayar Okuma Hatası",n,"error")})}function save(){const n={id:settingId.value.trim(),key:settingKey.value.trim(),value:settingValue.value.trim()};operationType==="edit"?fetch(`${uri}/${n.id}`,{method:"PUT",headers:jsonHeaders,body:JSON.stringify(n)}).then(function(n){if(!n.ok)throw Error(`${n.status} status code received.`);return n.json()}).then(function(t){t.isSuccessful?($("#add-edit-form")[0].reset(),refreshDatatable(),swal(`${n.key} adlı ayar güncellenmiştir.`,{icon:"success"})):swal("Ayar Güncelleme Hatası",t.message,"error")}).catch(n=>{console.error("Unable to update setting.",n),swal("Ayar Güncelleme Hatası",n,"error")}):fetch(uri,{method:"POST",headers:jsonHeaders,body:JSON.stringify(n)}).then(function(n){if(!n.ok)throw Error(`${n.status} status code received.`);return n.json()}).then(function(n){$("#add-edit-form")[0].reset();refreshDatatable();swal(`${n.key} adlı ayar eklenmiştir.`,{icon:"success"})}).catch(n=>{console.error("Unable to add setting.",n),swal("Ayar Ekleme Hatası",n,"error")});$("#modal-form").modal("hide")}function deleteSetting(n,t){swal({title:"Emin misiniz?",text:`${t} ayarını siliyorsunuz.`,icon:"warning",buttons:!0,dangerMode:!0}).then(i=>{i&&fetch(`${uri}/${n}`,{method:"DELETE",headers:jsonHeaders}).then(function(n){if(!n.ok)throw Error(`${n.status} status code received.`);return n.json()}).then(function(n){console.log("data: ",n);n.isSuccessful?(refreshDatatable(),swal(`${t} adlı ayar silinmiştir.`,{icon:"success"})):swal("Ayar Silme Hatası",n.message,"error")}).catch(n=>{console.error("Unable to delete setting.",n),swal("Ayar Silme Hatası",n,"error")})})}function refreshDatatable(){settingsTable.ajax.reload()}var uri="/api/Settings",settingsTable,operationType,settingId=document.getElementById("setting-id"),settingKey=document.getElementById("setting-key"),settingValue=document.getElementById("setting-value");const jsonHeaders=new Headers({Accept:"application/json","Content-Type":"application/json"});$(document).ready(function(){settingsTable=$("#settings").DataTable({dom:'rt<"row justify-content-between bottom-information"lip><"clear">',language:{url:"/lib/datatables/i18n/Turkish.json"},stateSave:!0,processing:!0,serverSide:!0,ajax:{url:`${uri}/LoadTable`,type:"POST",contentType:"application/json",dataType:"json",data:function(n){return JSON.stringify(n)}},columns:[{data:"id",visible:!1},{data:"key"},{data:"value"},{data:"isDeleted",className:"text-center",render:function(n){return n?'<span class="btn btn-xs btn-font-sm btn-bold btn-label-danger">Silindi<\/span>':'<span class="btn btn-xs btn-font-sm btn-bold btn-label-success">Aktif<\/span>'}},{data:null,orderable:!1,searchable:!1,render:function(n,t,i){var r='<div class="action-buttons">'+`<a class="text-primary" data-toggle="tooltip" title="Güncelle" onclick="displayEditModal('${i.id}')"><i class="las la-pencil-alt la-lg"></i></a>`;return i.isDeleted?r+'<i class="las la-trash-alt la-lg ml-2"><\/i>':r+`<a class="text-danger ml-2" data-toggle="tooltip" title="Sil" onclick="deleteSetting('${i.id}','${n.key}')"><i class="las la-trash-alt la-lg"></i></a></div>`},width:"75px"}]});$("#search").on("keyup change clear search",function(){settingsTable.search()!==this.value&&(settingsTable.search(this.value),settingsTable.columns(2).search($("#status").val()),settingsTable.draw())});$("#status").on("change",function(){settingsTable.search($("#search").value);settingsTable.columns(2).search($(this).val()).draw();settingsTable.draw()})});